// 高原

?loc = rocky_plateau

  // 取消后摇
  acc()

  // 行走与战斗
  ?foe.distance > 25
    run()
  :?stackPotion
   ?foe = phase1
    boss_1_stackPotion()
   :?foe = phase2
    boss_2_stackPotion()
   :?foe = phase3
    boss_3_stackPotion()
   :?foe = boss
    boss_0_stackPotion()
   :
    attack_stackPotion() 
  :
   ?foe = phase1
    boss_1()
   :?foe = phase2
    boss_2()
   :?foe = phase3
    boss_3()
   :?foe = boss
    boss_0()
   :
    attack()

  // 开局操作
  main()

  changeEquip()


///////////////////    行走    ///////////////////
func run()
 //木棒加速
 ?quarterstaffSkill()
  return

 //召唤火精靈
 ?fire_talismanSkill()
  return

 //開始疊藥
 //useStackPotion()

 //如果在疊藥就拿面具, 否則拿盾回甲
 ?stackPotion
  selectEquip("trisk", "mask")
 :
  restoreArmor("trisk")


///////////////////    小怪    ///////////////////
//高原沒有小怪, 直接跳過
func attack()
  ?foe.distance <= 10
    ?hp ! maxhp
      selectEquip(dL1, dL2)
    :
      selectEquip(dP, dI)
  :
    bashSkill()
  return

func attack_stackPotion()
 return

///////////////////  小 boss  ///////////////////
func boss_0()

 ?foe.distance <= 10
  ?hp ! maxhp
   selectEquip(dL1, dL2)
  :
   selectEquip(dP, dI)
 :
  bashSkill()

func boss_0_stackPotion()
 ?foe.distance <= 10
  ?needPoison()
   selectEquip(dP, "mask")
  :
   selectEquip(dI, "mask")
 :
  bashSkill()

///////////////////   第1階段   ///////////////////
func boss_1()
 ?foe.distance <= 10
  ?hp ! maxhp
   selectEquip(dL1, dL2)
  :
   selectEquip(dP, dI)
 :
  bashSkill()

func boss_1_stackPotion()
 ?foe.distance <= 10
  ?needPoison()
   selectEquip(dP, "mask")
  :?needIce()
   selectEquip(dI, "mask")
  ://?hp ! maxhp
   selectEquip(dL1, "mask")
 :
  bashSkill()

///////////////////   第2階段   ///////////////////
func boss_2()
 ?foe.distance <= 10
  ?foe = "poison"
   selectEquip(ice1, ice2)
  :?foe = "vigor"
   selectEquip(poison1, poison2)
  :?foe = "aether"
   selectEquip(vigor1, vigor2)
  :?foe = "fire"
   selectEquip(aether1, aether2)
  :?foe = "ice"
   selectEquip(fire1, fire2)
 :
  bashSkill()

func boss_2_stackPotion()
 ?foe.distance <= 10
  ?foe = "poison"
   selectEquip(ice1, "mask")
  :?foe = "vigor"
   selectEquip(poison1, "mask")
  :?foe = "aether"
   selectEquip(vigor1, "mask")
  :?foe = "fire"
   selectEquip(aether1, "mask")
  :?foe = "ice"
   selectEquip(fire1, "mask")

  //boss攻擊前根據需要上冰或者回血
  ?foe.time < 30 + iceEffect()
   ?hp ! maxhp
    selectEquip(dL1, "mask")
   ?!foe.buffs.GetCount("buff_protection")
    ?needIce()
     selectEquip(dI, "mask")
 :
  bashSkill()

///////////////////   第3階段   ///////////////////
func boss_3()
 //攻擊循環+1 (0~5)
 ?(foe.state=32 | foe.state=115) & !foe.time
  nextAttackLoop(6)

 //放大就后退
 ?timing(115, 58)
  >`10,0, timing(115, 58)
  ?mindSkill()
   >`10,1, mindSkill()
   mindSkill()
   return
  :
   >`10,2, mindSkill()
   selectEquip(cross1, cross2)
   return
    
 //上一層冰後喝暴擊藥打傷害
 ?foe.distance <= 10
  >`10,3, foe.distance <= 10
  ?foe.hp = foe.maxhp
   >`10,4, foe.hp = foe.maxhp
   selectEquip("moon", dI)
   return

  ?item.potion ! "empty"
   >`10,5, item.potion ! "empty"
   activate potion

  //大鎚技能削減盾量
  ?attackLoop = 2 & timing(32, 12)
   >`10,6, attackLoop = 2 & timing(32, 12)
   ?hammerSkill()
    >`10,7, hammerSkill()
    return

  //哪一對小劍傷害高就用那個
  selectEquip(poison1, vigor1)
  >`10,6, selectEquip(poison1, vigor1)
  ?hp ! maxhp
   >`10,7, hp ! maxhp selectEquip(dL1, dL2)
   selectEquip(dL1, dL2)
 :
  >`10,8, bashSkill()
  bashSkill()

// func boss_3_stackPotion()
//  //攻擊循環+1 (0~5)
//  ?(foe.state=32 | foe.state=115) & !foe.time
//   nextAttackLoop(6)

//  //擊晕
//  ?attackLoop = 2 &
//  ^timing(32, 27) &
//  ^foe.distance < 8
//   mindSkill()
//   return

//  ?foe.distance <= 10
//   //大鎚技能削減盾量
//   ?attackLoop = 2 & timing(32, 12)
//    ?hammerSkill()
//     return

//   //boss普攻前上毒減傷
//   ?attackLoop ! 2 & timing(32, 39)
//    ?maskSkill()
//     return
//    ?needPoison()
//     selectEquip(dP, "mask")
//     return

//   //上冰
//   ?needIce()
//    selectEquip(dI, "mask")
//    return

//   ?!foe.buffs.GetCount(
//   ^"adaptive_defense_poison")
//    selectEquip(poison1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_vigor")
//    selectEquip(vigor1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_aether")
//    selectEquip(aether1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_fire")
//    selectEquip(fire1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_ice")
//    selectEquip(ice1, "mask")
//  :
//   bashSkill()


///////////////////   开局阶段   ///////////////////
func main()
 ?totaltime <= 1
  beginAction()
 :
  action()
/* 開局行動
 當第一場開局時可以設定藥水和直接滿甲
 並且這時候大部分行動和技能都不能使用
 因此這部分獨立執行
*/
func beginAction()
 //選藥水
 brewPotion()

 //第一埸開局會直接滿甲, 記得帶上限最高的盾
 selectEquip("quest",value_shield)

 checkStackPotion()

 bossStart = false
//行动
func action()
 ?foe = phase1 & foe.hp ! foe.maxhp
  bossStart = true

 //火精靈技能(能用就用, 不能用也不要緊)
 cinderwispSkill()

 //吸取掉落物
 ?starPickup()
  return

 //動畫中回甲
 ?!ai.enabled | ai.paused
  //重置循環計算
  resetAttackLoop()

  ?stackPotion
   selectEquip("quest", "mask")
  :
   restoreArmor("quest")

  return
