// 高原
// 13* 2m51s    171s    10      241         134         15       2.089535     0.0122195/s
// 15* 3m28s    208s    0       215         168         17       4.88911      0.0235053/s
//                      0.014   0.233       2.744       27.455
?loc = rocky_plateau
  // 取消后摇
  aac()

  // 行走与战斗
  ?foe.distance > 25
    loc8_run()
  :?stackPotion
    ?foe = phase1
      loc8_boss_1_stackPotion()
    :?foe = phase2
      loc8_boss_2_stackPotion()
    :?foe = phase3
      loc8_boss_3_stackPotion()
    :?foe = boss
      loc8_boss_0_stackPotion()
    :
      loc8_attack_stackPotion() 
  :
    ?foe = phase1
      loc8_boss_1()
    :?foe = phase2
      loc8_boss_2()
    :?foe = phase3
      loc8_boss_3()
    :?foe = boss
      loc8_boss_0()
    :
      loc8_attack()

  // 开局操作
  loc8_main()

  // 更换装备
  changeEquip()

///////////////////   开局阶段   ///////////////////
func loc8_main()
  ?totaltime <= 1
    loc8_beginAction()
  :
    loc8_action()
/* 開局行動
 當第一場開局時可以設定藥水和直接滿甲
 並且這時候大部分行動和技能都不能使用
 因此這部分獨立執行
*/
func loc8_beginAction()
 //選藥水
  brewPotion(lucky)

 //第一埸開局會直接滿甲, 記得帶上限最高的盾
  selectEquip("quest",value_shield)

  checkStackPotion()

  bossStart = false
//行动
func loc8_action()
  ?foe = phase1 & foe.hp ! foe.maxhp
    bossStart = true

  //火精靈技能(能用就用, 不能用也不要緊)
  ?foe.hp <= 750
    cinderwispSkill_count(15)

  //吸取掉落物
  ?starPickup()
    return

  //動畫中回甲
  ?!ai.enabled | ai.paused
    //重置循環計算
    resetAttackLoop()

    ?stackPotion
      selectEquip("quest", "mask")
    :
      restoreArmor("quest")

    return

///////////////////    行走    ///////////////////
func loc8_run()
  // 木棒加速
  ?quarterstaffSkill()
    return

  // 召唤火精靈
  ?fire_talismanSkill()
    return

  // 開始疊藥
  // useStackPotion()

  // 如果在疊藥就拿面具, 否則拿盾回甲
  ?stackPotion
    selectEquip("trisk", "mask")
  :
    restoreArmor("trisk")


///////////////////    小怪    ///////////////////
func loc8_attack()
  ?foe.count >= 6
    selectEquipT(socketed_crossbow)
    return

  ?foe.distance <= 10
    ?BladeSkill()
      return
    ?hammerSkill()
      return
    ?bardicheSkill()
      return
    selectEquipT(heavy)
  :
    bashSkill()
  return

// func loc8_attack_stackPotion()
//   return

///////////////////  小 boss  ///////////////////
func loc8_boss_0()
  ?foe.distance <= 10
    ?BladeSkill()
      return
    ?bardicheSkill()
      return
    ?maskSkill()
      return

    ?hp ! maxhp
      selectEquip(dL1, dL2)
    :
      selectEquip(poison1, dP)
      
    ?needPoison()
      selectEquip(dP, dI)
    :?needIce()
      selectEquip(dP, dI)
  :
    bashSkill()

// func loc8_boss_0_stackPotion()
//  ?foe.distance <= 10
//   ?needPoison()
//    selectEquip(dP, "mask")
//   :
//    selectEquip(dI, "mask")
//  :
//   bashSkill()

///////////////////   第1階段   ///////////////////
func loc8_boss_1()
  ?foe.distance <= 10
    ?BladeSkill()
      return
    ?bardicheSkill()
      return

    ?hp ! maxhp
      selectEquip(dL1, dL2)
    :
      selectEquip(poison1, dP)

    ?needPoison()
      selectEquip(dP, dI)
    :?needIce()
      selectEquip(dP, dI)
  :
    bashSkill()

// func loc8_boss_1_stackPotion()
//  ?foe.distance <= 10
//   ?needPoison()
//    selectEquip(dP, "mask")
//   :?needIce()
//    selectEquip(dI, "mask")
//   ://?hp ! maxhp
//    selectEquip(dL1, "mask")
//  :
//   bashSkill()

///////////////////   第2階段   ///////////////////
func loc8_boss_2()
  ?foe.distance <= 10
    ?BladeSkill()
      return

    ?foe = "poison"
      selectEquip(ice1, ice2)
    :?foe = "vigor"
      selectEquip(poison1, poison2)
    :?foe = "aether"
      selectEquip(vigor1, vigor2)
    :?foe = "fire"
      selectEquip(aether1, aether2)
    :?foe = "ice"
      selectEquip(fire1, fire2)
  :
    bashSkill()

// func loc8_boss_2_stackPotion()
//  ?foe.distance <= 10
//   ?foe = "poison"
//    selectEquip(ice1, "mask")
//   :?foe = "vigor"
//    selectEquip(poison1, "mask")
//   :?foe = "aether"
//    selectEquip(vigor1, "mask")
//   :?foe = "fire"
//    selectEquip(aether1, "mask")
//   :?foe = "ice"
//    selectEquip(fire1, "mask")

//   //boss攻擊前根據需要上冰或者回血
//   ?foe.time < 30 + iceEffect()
//    ?hp ! maxhp
//     selectEquip(dL1, "mask")
//    ?!foe.buffs.GetCount("buff_protection")
//     ?needIce()
//      selectEquip(dI, "mask")
//  :
//   bashSkill()

///////////////////   第3階段   ///////////////////
func loc8_boss_3()
  //攻擊循環+1 (0~5)
  ?(foe.state=32 | foe.state=115) & !foe.time
    nextAttackLoop(6)

  //放大就后退
  ?(foe.state=115 & foe.time > 74 & loc.stars <= 15)
  ^ | (foe.state=115 & foe.time > 71 & loc.stars > 15)
    ?mindSkill()
      return
    :
      selectEquip(cross1, cross2)
      return

  // 距离够了，近战
  ?foe.distance <= 10
    ?BladeSkill()
      return
    ?bardicheSkill()
      return

    //大鎚技能削減盾量
    ?attackLoop = 2 & timing(32, 12)
      ?hammerSkill()
        return

    //躲晕
    ?attackLoop = 2 & timing(32, 27)
    ^ & foe.distance < 8
      mindSkill()
      return

    //boss普攻前上毒減傷
    ?attackLoop ! 2 & timing(32, 39)
      ?maskSkill()
        return
      ?needPoison()
        selectEquip(dP, dI)
        return

    //上冰
    ?needIce()
      selectEquip(dP, dI)
      return

    //喝暴擊藥打傷害
    ?item.potion ! "empty"
      activate potion

    //哪一對小劍傷害高就用那個
    // selectEquip(poison1, vigor1)
    ?!foe.buffs.GetCount("adaptive_defense_poison")
      selectEquip(poison1, poison2)
    :?!foe.buffs.GetCount("adaptive_defense_vigor")
      selectEquip(vigor1, vigor2)
    :?!foe.buffs.GetCount("adaptive_defense_aether")
      selectEquip(aether1, aether2)
    :?!foe.buffs.GetCount("adaptive_defense_fire")
      selectEquip(fire1, fire2)
    :?!foe.buffs.GetCount("adaptive_defense_ice")
      selectEquip(ice1, ice2)

    //吸血
    // ?!buffs.GetCount("lucky_mult")
    //   ?hp ! maxhp
    //     selectEquip(dL1, dL2)
    ?hp < 31
      selectEquip(dL1, dL2)
  :
    bashSkill()

// func loc8_boss_3_stackPotion()
//  //攻擊循環+1 (0~5)
//  ?(foe.state=32 | foe.state=115) & !foe.time
//   nextAttackLoop(6)

//  //擊晕
//  ?attackLoop = 2 &
//  ^timing(32, 27) &
//  ^foe.distance < 8
//   mindSkill()
//   return

//  ?foe.distance <= 10
//   //大鎚技能削減盾量
//   ?attackLoop = 2 & timing(32, 12)
//    ?hammerSkill()
//     return

//   //boss普攻前上毒減傷
//   ?attackLoop ! 2 & timing(32, 39)
//    ?maskSkill()
//     return
//    ?needPoison()
//     selectEquip(dP, "mask")
//     return

//   //上冰
//   ?needIce()
//    selectEquip(dI, "mask")
//    return

//   ?!foe.buffs.GetCount(
//   ^"adaptive_defense_poison")
//    selectEquip(poison1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_vigor")
//    selectEquip(vigor1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_aether")
//    selectEquip(aether1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_fire")
//    selectEquip(fire1, "mask")
//   :?!foe.buffs.GetCount(
//   ^"adaptive_defense_ice")
//    selectEquip(ice1, "mask")
//  :
//   bashSkill()


