func import_appearances_modle()
  import Pets/Fly
  import Weapons/AR
  import UI/MindstoneButton
  import UI/BetterInfo2
func AAC()
  ?item.left.state = 3
    equipL *0 wand
    equipL @item.left@
  ?item.right.state = 3
    ?time % 2
      equipR throw
    :
      equipR *0 shield
    equip @item.right@
func equip_star_stone()
  ?pickup.distance <= 22
    equipL triskelion
    equipR star_stone
func equip_collection_tool()
  ?foe.count = 0 & harvest.distance <= 5 
    ?harvest = Tree
      equipL triskelion
      equipR hatchet
      activate R
    :?harvest = Boulder
      equip shovel
func equip_dash_and_bash()
  ?harvest.distance > 5                         
    ?foe.distance > 16 
      equipL triskelion
      equipR ouroboros
      ?item.GetCooldown(＂quarterstaff＂) <= 0 &
      ^item.CanActivate()
        equip quarterstaff
        activate R
    :?foe.distance <= 16 & foe.distance >= 11
      ?item.GetCooldown(＂dash＂) <= 0
        equip dashing_shield  
      :?item.GetCooldown(＂bash＂) <= 0
        equip bashing shield  
func summon_talisman(talisman)
  ?talisman = fire
    ?summon.GetId() ! ＂cinderwisp＂
      equipL triskelion
      equipR fire_talisman
      ?item.CanActivate()
      ^ & (item.GetCooldown(＂fire_talisman＂) <= 0 | item.GetCooldown(＂fire_talisman＂) >= 130)
        activate R
    :?summon.GetId() = ＂cinderwisp＂
      return true
  :?talisman = aether
    ?summon.GetId() ! ＂voidweaver＂ 
      equipL triskelion
      equipR aether
      ?item.CanActivate()
      ^ & (item.GetCooldown(＂aether＂) <= 0 | item.GetCooldown(＂aether＂) >= 130)
        activate R
    :?summon.GetId() = ＂voidweaver＂
      return true
  return false
func active_skill_blade_of_god()
  ?item.GetCooldown(＂blade＂) <= 0
  ^ & ((foe.count > 5 | foe = boss) & foe.distance <= 22)
  ^ & item.CanActivate()
  ^ & foe ! Pallas
    equip blade_of_god
    activate R
func active_skill_cult_mask()
  ?item.GetCooldown(＂mask＂) <= 0
  ^ & foe = boss
  ^ & foe.distance < 25
  ^ & item.CanActivate()
    equip cult_mask
    activate R
func equip_skeleton_arm()
  equip skeleton_arm
  ?item.GetCooldown(＂skeleton_arm＂) <= 0 
  ^ & foe.distance <= 7 
  ^ & foe ! ＂immune_to_physical＂
  ^ & item.CanActivate(＂skeleton_arm＂)
    activate R
func equip_both_crossbows()
  equipL crossbow
  equipR crossbow
func activate_potion_flow_health(health) 
  ?hp < health
    activate P
import_appearances_modle()
>`0,11, foe.dis    = @foe.distance@
>`0,12, staff      = @item.GetCooldown(＂quarterstaff＂)@
>`0,13, dash       = @item.GetCooldown(＂dash＂)@
>`0,14, bash       = @item.GetCooldown(＂bash＂)@
>`0,15, mind       = @item.GetCooldown(＂mind＂)@
>`0,16, State:Time = @foe.state@:@foe.time@
>`0,23,#white, My buffs: @buffs.string@
var needStackPotion = loc.stars > 10 & false
var bossStart = false
var eL = ""
var eR = ""
func acc() 
  ?item.left.state = 3
    equipL sword
  ?item.right.state = 3
    equipR shield
func selectEquipL(e) 
 eL = e
func selectEquipR(e) 
 eR = e
func selectEquip(L, R) 
 selectEquipL(L)
 selectEquipR(R)
func selectEquipT(e) 
 selectEquip(e, e)
func changeEquip()
 ?eL = eR & eL
  equip @eL@
 : 
  ?eL
   equipL @eL@
  ?eR
   equipR @eR@
func starPickup()
 ?pickup.distance <= 5
  selectEquip("trisk", "star")
  return true
 return false
func restoreArmor(L)
 var speed_maxarmor = speed_shield_value
 ?L = "quest"
  speed_maxarmor = speed_maxarmor + 2
 ?armor >= speed_maxarmor
  selectEquip(L, value_shield)
 :
  selectEquip(L, speed_shield)
func restoreArmor_element()
 ?foe = "poison"
  selectEquipR(ice_shield_A)
 :?foe = "vigor"
  selectEquipR(poison_shield_A)
 :?foe = "aether"
  selectEquipR(vigor_shield_A)
 :?foe = "fire"
  selectEquipR(aether_shield_A)
 :?foe = "ice"
  selectEquipR(fire_shield_A)
func BladeSkill()
 ?item.GetCooldown("blade") <= 0 &
 ^foe.distance <= 23 & 
 ^item.CanActivate()
  selectEquipT("blade")
  equip blade
  activate R
  return true
 return false
func BladeSkill_screenMove()
 ?item.GetCooldown("blade") <= 0 &
 ^foe.distance <= 23 & 
 ^item.CanActivate()
  screen.Next() 
  ?screen.x = screen.i * 69 + 55
   BladeSkill()
   screen.ResetOffset() 
   return true
 return false
func maskSkill()
 ?item.CanActivate() &
 ^item.GetCooldown("mask") <= 0
 ^ & foe.distance<24 
  selectEquipT("mask")
  equipR mask
  activate R
  return true
 return false
func armSkill()
 ?buffs.string = "pick_pocket" & 
 ^foe.distance > 3 & foe.distance < 9 & 
 ^item.GetCooldown("skeleton_arm") <= 0 &
 ^item.CanActivate()
  selectEquipT("skeleton_arm")
  equip skeleton_arm
  activate R
  return true
 return false
func hammerSkill()
 ?(item.CanActivate() &
 ^item.GetCooldown("heavy_hammer") <= 0 &
 ^foe.distance <= 23) | 
 ^(item.right = "heavy" & 
 ^item.right.state = 2)
  selectEquipT(heavy)
  equip @heavy@
  activate R
  return true
 return false
func bardicheSkill()
 ?(item.CanActivate() &
 ^item.GetCooldown("bardiche") <= 0 &
 ^foe.distance <= 10) | 
 ^(item.right = "bardiche" & 
 ^item.right.state = 2)
  selectEquipT(bardiche)
  equip @bardiche@
  activate R
  return true
 return false
func quarterstaffSkill()
 ?item.GetCooldown("quarterstaff") <= 0 &
 ^item.CanActivate()
  selectEquipT("quarterstaff")
  equip quarterstaff
  activate R
  return true
 return false
func dashSkill()
 ?foe.distance > 10 & foe.distance <= 16
  ?item.GetCooldown("dash") <= 0
   selectEquip("trisk","dash")
   return true
  ?item.GetCooldown("bash") <= 0
   selectEquip("trisk","bash")
   return true
 ?quarterstaffSkill()
  return true
 restoreArmor("sword")
 return false
func bashSkill()
 ?foe.distance > 10 & foe.distance <= 16
  ?item.GetCooldown("bash") <= 0
   selectEquip("trisk","bash")
   return true
  ?item.GetCooldown("dash") <= 0
   selectEquip("trisk","dash")
   return true
 ?quarterstaffSkill()
  return true
 restoreArmor("sword")
 return false
func mindSkill()
 ?item.GetCooldown("mind") <= 0
  selectEquip("quest","mind")
  return true
 return false
func fire_talismanSkill()
 ?summon.GetId() ! "cinderwisp" &
 ^(item.CanActivate() &
 ^item.GetCooldown("fire_talisman") <= 0 |
 ^item.right="fire_talisman" &
 ^item.right.state=2)
  selectEquip("trisk","fire_talisman")
  equipL trisk
  equipR fire_talisman
  activate R
  return true
 return false
func cinderwispSkill_count(n)
 ?summon.GetId() = "cinderwisp" &
 ^item.GetCooldown("cinderwisp") <= 0 &
 ^summon.GetVar("ignition") >= n
  activate cinderwisp
  return true
 return false
func cinderwispSkill()
 return cinderwispSkill_count(6)
func aether_talismanSkill()
 ?(summon.GetId() ! "voidweaver" &
 ^item.CanActivate() &
 ^item.GetCooldown("aether_talisman") <= 0) |
 ^(item.right="aether_talisman" &
 ^item.right.state=2)
  selectEquip("trisk","aether_talisman")
  equipL trisk
  equipR aether_talisman
  activate R
  return true
 return false
func voidweaverSkill()
 ?summon.GetId() = "voidweaver" &
 ^item.GetCooldown("voidweaver") <= 0
  activate voidweaver
  return true
 return false
var moonTimer = -1
func moondialing_4_4(L, R)
 moonTimer = totaltime % 5
 ?moonTimer = 0 | moonTimer = 1
  selectEquip("moon", R)
 :?moonTimer = 2 | moonTimer = 3
  selectEquip("moon", L)
 :?moonTimer = 4
  selectEquip(L, R)
func moondialing_4_3(L, R)
 moonTimer = totaltime % 5
 ?moonTimer = 1 | moonTimer = 4
  selectEquipL(R)
 :
  selectEquipL("moon")
 ?moonTimer = 0 | moonTimer = 3
  selectEquipR(R)
 :
  selectEquipR(L)
func moondialing_3_3(L, R)
 moonTimer = totaltime % 3
 ?moonTimer = 0
  selectEquip("moon", R)
 :?moonTimer = 1
  selectEquip("moon", L)
 :?moonTimer = 2
  selectEquip(L, R)
var stackPotion = false
func checkStackPotion()
 stackPotion = needStackPotion &
 ^(loc.averageTime < 0 |
 ^getPotionTime() < loc.averageTime)
 return stackPotion
func useStackPotion()
 ?item.potion ! "empty" &
 ^((item.right = "star" & bossStart)
 ^| stackPotion)
  activate potion
  return true
func getPotionTime()
 ?buffs.GetTime("vampiric") 
  return buffs.GetTime("vampiric")
 ?buffs.GetTime("berserk") 
  return buffs.GetTime("berserk")
 ?buffs.GetTime("strength") 
  return buffs.GetTime("strength")
 ?buffs.GetTime("invisibility") 
  return buffs.GetTime("invisibility")
 ?buffs.GetTime("lucky_crit") 
  return buffs.GetTime("lucky_crit")
 ?buffs.GetTime("experience") 
  return buffs.GetTime("experience")
 return 0
func brewPotion()
 brew stone + bronze 
 return
func needFire() 
 return 
 ^foe.debuffs.GetTime("debuff_dot") <= 10
func needPoison() 
 return 
 ^foe.debuffs.GetTime("debuff_damage") <= 10
func needPoison_timing(s, t)
 return needPoison() & timing(s, t - 12)
func needIceCount(n) 
 return
 ^foe.debuffs.GetCount("debuff_chill") < n |
 ^foe.debuffs.GetTime("debuff_chill") <= 10
func needIce() 
 return needIceCount(6)
func iceEffect()
 return foe.debuffs.GetCount("debuff_chill")
 ^ * 20 / 3
var attackLoop = -1
func resetAttackLoop()
 attackLoop = -1
 return attackLoop
func nextAttackLoop(loopCount)
 attackLoop = (attackLoop + 1) % loopCount
 return attackLoop
func timing(s, t)
 return foe.state=s & foe.time>=t+iceEffect()
var poison1 = "poison sword D -shiny -long *10 +11"
var poison2 = "poison sword D -shiny -long *10 +7"
var vigor1 = "vigor sword D -shiny -long *10 +9"
var vigor2 = "vigor sword D -shiny -long *10 +8"
var aether1 = "aether sword D -shiny -long *10 +9"
var aether2 = "aether sword D -shiny -long *10 +7"
var fire1 = "fire sword D -shiny -long *10 +8"
var fire2 = "fire sword D -shiny -long *10 +7"
var ice1 = "ice sword D -shiny -long *10 +8"
var ice2 = "ice sword D -shiny -long *10 +7"
var dP = "poison sword dP -shiny -long *10 +7"
var dL1 = "vigor sword dL -shiny -long *10 +8"
var dL2 = "vigor sword dL -shiny -long *10 +7"
var dI = "ice sword dI -shiny -long *10 +7"
var cross1 = "crossbow *10 +12"
var cross2 = "crossbow *10 +11" 
var poison_heavy_cross = "poison heavy_crossbow"
var vigor_heavy_cross = "vigor heavy_crossbow"
var aether_heavy_cross = "aether heavy_crossbow"
var fire_heavy_cross = "fire heavy_crossbow"
var ice_heavy_cross = "ice heavy_crossbow"
var bardiche = "bardiche shiny"
var heavy = "heavy hammer *10"
var speed_shield = "compound -shiny"
var speed_shield_value = 14
var value_shield = "compound shiny"
var poison_shield_A = "poison shield A"
var vigor_shield_A = "vigor shield A"
var aether_shield_A = "aether shield A"
var fire_shield_A = "fire shield A"
var ice_shield_A = "ice shield A"
var stackPotion = false
?loc = temple
  AAC()   
  ?summon_talisman(aether)
    loadout ice_heavy_cross
    ?foe = boss
      loadout 4
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()       
?loc = icy_ridge
  AAC()   
  ?summon_talisman(aether)
    loadout 6
    ?foe = boss
      loadout 6
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()       
?loc = bronze_mine
  AAC()
  ?summon_talisman(aether)
    ?foe.distance >= 11
    ^ &foe ! boss
      equip_dash_and_bash()
    :
      > dis < 11
      loadout 1
      ?foe = boss
        loadout 3
  ?foe = boss
    activate_potion_flow_health(31)
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()       
:?loc = undead_crypt    
  AAC()
  ?summon_talisman(aether) 
    loadout 8
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()       
?loc = fungus_forest
  AAC()
  ?summon_talisman(aether)
    loadout 4
    ?foe = boss
      loadout 9
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()       
?loc = caustic_caves
  AAC()
  ?summon_talisman(aether)
    ?foe.distance >= 11
      equip_dash_and_bash()
    :
      > dis < 11
      loadout 3
      ?foe = boss
        loadout 9
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()
?loc = deadwood_valley
  AAC()
  ?summon_talisman(aether) 
    ?foe.distance >= 11
      loadout 9
    :
      > dis < 11
      loadout 9
      ?foe = boss
        loadout 7
  activate_potion_flow_health(30)
  active_skill_blade_of_god()
  ?loc ! temple
    active_skill_cult_mask()
  equip_star_stone()
  equip_collection_tool()       
?loc = rocky_plateau
  acc()
  ?foe.distance > 25
    run()
  :?stackPotion
   ?foe = phase1
    boss_1_stackPotion()
   :?foe = phase2
    boss_2_stackPotion()
   :?foe = phase3
    boss_3_stackPotion()
   :?foe = boss
    boss_0_stackPotion()
   :
    attack_stackPotion() 
  :
   ?foe = phase1
    boss_1()
   :?foe = phase2
    boss_2()
   :?foe = phase3
    boss_3()
   :?foe = boss
    boss_0()
   :
    attack()
  main()
  changeEquip()
func run()
 ?quarterstaffSkill()
  return
 ?fire_talismanSkill()
  return
 ?stackPotion
  selectEquip("trisk", "mask")
 :
  restoreArmor("trisk")
func attack()
  ?foe.distance <= 10
    ?hp ! maxhp
      selectEquip(dL1, dL2)
    :
      selectEquip(dP, dI)
  :
    bashSkill()
  return
func attack_stackPotion()
 return
func boss_0()
 ?foe.distance <= 10
  ?hp ! maxhp
   selectEquip(dL1, dL2)
  :
   selectEquip(dP, dI)
 :
  bashSkill()
func boss_0_stackPotion()
 ?foe.distance <= 10
  ?needPoison()
   selectEquip(dP, "mask")
  :
   selectEquip(dI, "mask")
 :
  bashSkill()
func boss_1()
 ?foe.distance <= 10
  ?hp ! maxhp
   selectEquip(dL1, dL2)
  :
   selectEquip(dP, dI)
 :
  bashSkill()
func boss_1_stackPotion()
 ?foe.distance <= 10
  ?needPoison()
   selectEquip(dP, "mask")
  :?needIce()
   selectEquip(dI, "mask")
  :
   selectEquip(dL1, "mask")
 :
  bashSkill()
func boss_2()
 ?foe.distance <= 10
  ?foe = "poison"
   selectEquip(ice1, ice2)
  :?foe = "vigor"
   selectEquip(poison1, poison2)
  :?foe = "aether"
   selectEquip(vigor1, vigor2)
  :?foe = "fire"
   selectEquip(aether1, aether2)
  :?foe = "ice"
   selectEquip(fire1, fire2)
 :
  bashSkill()
func boss_2_stackPotion()
 ?foe.distance <= 10
  ?foe = "poison"
   selectEquip(ice1, "mask")
  :?foe = "vigor"
   selectEquip(poison1, "mask")
  :?foe = "aether"
   selectEquip(vigor1, "mask")
  :?foe = "fire"
   selectEquip(aether1, "mask")
  :?foe = "ice"
   selectEquip(fire1, "mask")
  ?foe.time < 30 + iceEffect()
   ?hp ! maxhp
    selectEquip(dL1, "mask")
   ?!foe.buffs.GetCount("buff_protection")
    ?needIce()
     selectEquip(dI, "mask")
 :
  bashSkill()
func boss_3()
 ?(foe.state=32 | foe.state=115) & !foe.time
  nextAttackLoop(6)
 ?timing(115, 58)
  >`10,0, timing(115, 58)
  ?mindSkill()
   >`10,1, mindSkill()
   mindSkill()
   return
  :
   >`10,2, mindSkill()
   selectEquip(cross1, cross2)
   return
 ?foe.distance <= 10
  >`10,3, foe.distance <= 10
  ?foe.hp = foe.maxhp
   >`10,4, foe.hp = foe.maxhp
   selectEquip("moon", dI)
   return
  ?item.potion ! "empty"
   >`10,5, item.potion ! "empty"
   activate potion
  ?attackLoop = 2 & timing(32, 12)
   >`10,6, attackLoop = 2 & timing(32, 12)
   ?hammerSkill()
    >`10,7, hammerSkill()
    return
  selectEquip(poison1, vigor1)
  >`10,6, selectEquip(poison1, vigor1)
  ?hp ! maxhp
   >`10,7, hp ! maxhp selectEquip(dL1, dL2)
   selectEquip(dL1, dL2)
 :
  >`10,8, bashSkill()
  bashSkill()
func main()
 ?totaltime <= 1
  beginAction()
 :
  action()
func beginAction()
 brewPotion()
 selectEquip("quest",value_shield)
 checkStackPotion()
 bossStart = false
func action()
 ?foe = phase1 & foe.hp ! foe.maxhp
  bossStart = true
 cinderwispSkill()
 ?starPickup()
  return
 ?!ai.enabled | ai.paused
  resetAttackLoop()
  ?stackPotion
   selectEquip("quest", "mask")
  :
   restoreArmor("quest")
  return